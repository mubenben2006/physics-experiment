import numpy as np
import matplotlib.pyplot as plt
from scipy.interpolate import CubicSpline
#%%
U_H1=[6.8,13.2,19.8,26.5,32.6,39.6,46.3,52.8]
I_S1=np.linspace(0.25,2,8)

U_H2=[8.8,17.5,26.3,35.1,43.9,52.7,61.6,70.3]
B2=np.linspace(26.4,211.2,8)

U_H3=np.array([14.1,16.3,19.5,24.9,33.0,42.4,49.3,51.7,52.3,52.4,52.4,52.5,52.5,52.4,52.1,45.2,35.4,26.6,21,17.1,14.7])
x=np.array([0,2,4,6,8,10,12,14,16,18,20,25,30,40,45,50,52,54,56,58,60])
B3=U_H3/0.33

I_S4=np.linspace(0.25,2,8)
U_sigma=[0.18,0.36,0.55,0.73,0.91,1.1,1.28,1.46]
#%%
fig, axes = plt.subplots(2, 2, figsize=(10, 7.5))  # 2行2列，画布大小 10×8
fig.suptitle("Hall Element", fontsize=14)  # 总标题

# 子图1
ax1 = axes[0, 0]  # 第一行第一列
p1 = np.polyfit(I_S1, U_H1, 1)
f1 = p1[0] * I_S1 + p1[1]
ax1.scatter(I_S1, U_H1, marker='x', label='Data')
ax1.plot(I_S1, f1, 'r', label='Fit')
ax1.text(0.05, 0.85, f"U_H1 = {p1[0]:.2f}I_S1 + {p1[1]:.2f}", transform=ax1.transAxes, fontsize=12,
        bbox=dict(facecolor='white', alpha=0.8))
ax1.set_xlabel('I_S1(mA)')
ax1.set_ylabel('U_H1(mV)')
ax1.set_title("Hall element U_H—I_S curve")
ax1.legend()

# 子图2
ax2 = axes[0, 1]  # 第一行第二列
p2 = np.polyfit(B2, U_H2, 1)
f2 = p2[0] * B2 + p2[1]
ax2.scatter(B2, U_H2, marker='x', label='Data')
ax2.plot(B2, f2, 'r', label='Fit')
ax2.text(0.05, 0.85, f"U_H2 = {p2[0]:.2f}B2 + {p2[1]:.2f}", transform=ax2.transAxes, fontsize=12,
        bbox=dict(facecolor='white', alpha=0.8))
ax2.text(0.05, 0.7, f"K_H=U_H/(B*I_S)=0.33/0.002=165 mV/T·mA", transform=ax2.transAxes, fontsize=8,
        bbox=dict(facecolor='white', alpha=0.8))
ax2.set_xlabel('B2(mT)')
ax2.set_ylabel('U_H2(mV)')
ax2.set_title("Hall element U_H—B curve")
ax2.legend()

# 子图3
ax3 = axes[1, 0]  # 第二行第一列
p3 = CubicSpline(x, B3)  # 三次样条
x_fine = np.linspace(0, 60, 300)  # 更密集的点用于平滑绘图
ax3.scatter(x, B3, marker='x', label='Data')
ax3.plot(x_fine, p3(x_fine), 'r', label="Fit")
ax3.set_xlabel('x(mm)')
ax3.set_ylabel('B3(mT)')
ax3.set_title("Hall element B—x curve")
ax3.legend()

# 子图4
ax4 = axes[1, 1]  # 第二行第二列
p4 = np.polyfit(I_S4, U_sigma, 1)
f4 = p4[0] * I_S4 + p4[1]
ax4.scatter(I_S4, U_sigma, marker='x', label='Data')
ax4.plot(I_S4, f4, 'r', label='Fit')
ax4.text(0.05, 0.85, f"U_sigma = {p4[0]:.2f}I_S4 + {p4[1]:.2f}", transform=ax4.transAxes, fontsize=12,
        bbox=dict(facecolor='white', alpha=0.8))
ax4.text(0.05, 0.7, f"sigma=L*I_S/(U_sigma*S)=5.27 ohm^-1·m^-1", transform=ax4.transAxes, fontsize=8,
        bbox=dict(facecolor='white', alpha=0.8))
ax4.set_xlabel('I_S4(mA)')
ax4.set_ylabel('U_sigma(V)')
ax4.set_title("Hall element U_sigma—I_S curve")
ax4.legend()

plt.tight_layout()  # 自动调整子图间距，防止重叠
plt.show()
